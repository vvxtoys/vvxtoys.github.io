<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java工具类(poi导入)]]></title>
    <url>%2F2018%2F07%2F10%2Fpoidemo%2F</url>
    <content type="text"><![CDATA[poi导入工具类 maven依赖 123456&lt;!-- POI --&gt;&lt;dependency&gt; &lt;groupId&gt;org.apache.poi&lt;/groupId&gt; &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt; &lt;version&gt;3.9&lt;/version&gt;&lt;/dependency&gt; 导入工具类 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970package cc.vvxtoys.poi;import java.math.BigDecimal;import java.text.SimpleDateFormat;import org.apache.poi.hssf.usermodel.HSSFCell;import org.apache.poi.hssf.usermodel.HSSFDateUtil;import org.apache.poi.ss.usermodel.Cell;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.xssf.usermodel.XSSFCell;public class ImportExcelUtils &#123; public static final String EXCEL_2003 = &quot;.xls&quot;; public static final String EXCEL_2007 = &quot;.xlsx&quot;; @SuppressWarnings(&quot;static-access&quot;) public String getValue(XSSFCell cell) &#123; if (cell.getCellType() == cell.CELL_TYPE_BOOLEAN) &#123; return String.valueOf(cell.getBooleanCellValue()).trim(); &#125; else if (cell.getCellType() == cell.CELL_TYPE_NUMERIC) &#123; if (HSSFDateUtil.isCellDateFormatted(cell)) &#123; SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); return String.valueOf(sdf.format(HSSFDateUtil.getJavaDate(cell.getNumericCellValue()))).trim(); &#125; BigDecimal bd = new BigDecimal(String.valueOf(cell.getNumericCellValue()).trim()); return bd.toPlainString(); &#125; else &#123; return String.valueOf(cell.getStringCellValue()).trim(); &#125; &#125; @SuppressWarnings(&quot;static-access&quot;) public String getValue(HSSFCell cell) &#123; if (cell.getCellType() == cell.CELL_TYPE_BOOLEAN) &#123; return String.valueOf(cell.getBooleanCellValue()).trim(); &#125; else if (cell.getCellType() == cell.CELL_TYPE_NUMERIC) &#123; if (HSSFDateUtil.isCellDateFormatted(cell)) &#123; SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); return String.valueOf(sdf.format(HSSFDateUtil.getJavaDate(cell.getNumericCellValue()))).trim(); &#125; BigDecimal bd = new BigDecimal(String.valueOf(cell.getNumericCellValue()).trim()); return bd.toPlainString(); &#125; else &#123; return String.valueOf(cell.getStringCellValue()).trim(); &#125; &#125; //判断空行 public boolean isBlank(Row row)&#123; for(int i=0;i&lt;row.getLastCellNum();i++)&#123; Cell cell = row.getCell(i); if(cell!=null&amp;&amp;cell.getCellType()!=cell.CELL_TYPE_BLANK)&#123; return false; &#125; &#125; return true; &#125; //非空判断 public boolean isEmpty(Object obj)&#123; if (obj instanceof HSSFCell) &#123; HSSFCell cell = (HSSFCell) obj; return getValue(cell) == null || &quot;&quot;.equals(getValue(cell)); &#125; if (obj instanceof XSSFCell) &#123; XSSFCell cell = (XSSFCell) obj; return getValue(cell) == null || &quot;&quot;.equals(getValue(cell)); &#125; return obj == null || obj.toString().trim().equals(&quot;&quot;); &#125; &#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>utils</tag>
        <tag>poi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java工具类(日期处理)]]></title>
    <url>%2F2018%2F07%2F10%2FDateUtil%2F</url>
    <content type="text"><![CDATA[最近总是接触时间处理问题，花了点时间整理以前使用过的方法，修改整合，记录下来方便以后使用。package cc.vvxtoys.util;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;/** * * @author vvxtoys * @date 2018年1月6日下午9:48:02 * */public class DateUtils &#123; private static Calendar cal = Calendar.getInstance(); private static String fm = &quot;&quot;;//format month private static String fd = &quot;&quot;;//format day /** * @description 判断是否为闰年 */ public static boolean isLeapYear(int year)&#123; return (year % 400 == 0) || (year % 4 == 0 &amp;&amp; year % 100 != 0); &#125; /** * * @description 获取月天数 */ public static String getMonthDays(int year,int month)&#123; String [] days = &#123;&quot;31&quot;, null, &quot;31&quot;, &quot;30&quot;, &quot;31&quot;, &quot;30&quot;, &quot;31&quot;, &quot;31&quot;, &quot;30&quot;, &quot;31&quot;, &quot;30&quot;, &quot;31&quot;&#125;; if(isLeapYear(year))&#123; days[1]=&quot;29&quot;; &#125;else&#123; days[1]=&quot;28&quot;; &#125; return days[month-1]; &#125; /** * @description 获取时间在当前年为第几周 */ public static int getWeekOfYear(String date) throws ParseException &#123; SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); cal.setFirstDayOfWeek(Calendar.MONDAY); String firstDay = date.substring(0, 4) + &quot;-01-01&quot;; cal.setTime(sdf.parse(firstDay)); int dayOfWeek = cal.get(Calendar.DAY_OF_WEEK); if (dayOfWeek == 2) &#123; cal.setTime(sdf.parse(date)); int num = cal.get(Calendar.WEEK_OF_YEAR); return num; &#125; else &#123; cal.setTime(sdf.parse(date)); int num = cal.get(Calendar.WEEK_OF_YEAR) - 1; return num; &#125; &#125; /** * * @description 天计算 */ public static String addDays(String date,int num)&#123; try&#123; cal.setTime(toDate(date)); cal.add(Calendar.DATE, num); toFormatDate(); &#125;catch(Exception e)&#123; e.printStackTrace(); &#125; return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; /** * * @description 星期 */ public static String addWeeks(String date,int num)&#123; try &#123; cal.setTime(toDate(date)); cal.add(Calendar.WEEK_OF_YEAR, num); toFormatDate(); &#125; catch (ParseException e) &#123; e.printStackTrace(); &#125; return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; /** * * @description 月 */ public static String addMonths(String date,int num)&#123; try &#123; cal.setTime(toDate(date)); cal.add(Calendar.MONTH, num); toFormatDate(); &#125; catch (ParseException e) &#123; e.printStackTrace(); &#125; return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; /** * * @description 季度 */ public static String addQuarters(String date,int num)&#123; try &#123; cal.setTime(toDate(date)); cal.add(Calendar.MONTH, num*3); toFormatDate(); &#125; catch (ParseException e) &#123; e.printStackTrace(); &#125; return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; /** * * @description 年 */ public static String addYears(String date,int num)&#123; try &#123; cal.setTime(toDate(date)); cal.add(Calendar.YEAR, num); toFormatDate(); &#125; catch (ParseException e) &#123; e.printStackTrace(); &#125; return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; /** * * @description 日期转换 */ public static Object translateDate(Object time, String pattern) &#123; Object date = new Object(); if (isEmpty(pattern)) &#123; pattern = &quot;yyyy-MM-dd&quot;; &#125; if (isEmpty(time)) &#123; time = &quot;1970-1-1&quot;; &#125; SimpleDateFormat sdf = new SimpleDateFormat(pattern); try &#123; if (time instanceof String) &#123; date = sdf.parse((String) time); &#125; else if (time instanceof Date) &#123; date = sdf.format(time); &#125; else &#123; throw new Exception(&quot;转换失败&quot;); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return date; &#125; /** * * @description 当前日期为本周第几天 */ public static int getDayOfWeek(String date)&#123; try&#123; cal.setTime(toDate(date)); cal.setFirstDayOfWeek(Calendar.MONDAY); &#125;catch(ParseException e)&#123; e.printStackTrace(); &#125; return cal.get(Calendar.DAY_OF_WEEK)==1?7:cal.get(Calendar.DAY_OF_WEEK)-1; &#125; /** * * @description 周一 */ public static String getStartDayOfThisWeek(String date)&#123; return addDays(date, -(getDayOfWeek(date)-1)); &#125; /** * * @description 周日 */ public static String getEndDayOfThisWeek(String date)&#123; return addDays(date,(7-getDayOfWeek(date))); &#125; //获取当前时间 public static String getCurrentDate()&#123; Date date = new Date(); SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); return sdf.format(date); &#125; //当前时间 public static String getCurrentDate(String pattern)&#123; Date date = new Date(); if(isEmpty(pattern))&#123; pattern = &quot;yyyy-MM-dd&quot;; &#125; SimpleDateFormat sdf = new SimpleDateFormat(pattern); return sdf.format(date); &#125; /** * * @description 时间间隔 月 季度 年 *3 *12 */ public static int getSubDays(int num)&#123; Date date = new Date(); cal.setTime(date); cal.add(Calendar.MONTH, num); long time = cal.getTimeInMillis() - date.getTime(); return (int) (time / (1000 * 60 * 60 * 24)); &#125; /** * * @description 获取第几周开始时间 */ public static String getStartDayOfWeek(int year,int num)&#123; cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY); cal.set(Calendar.YEAR, year); cal.set(Calendar.WEEK_OF_YEAR, num); toFormatDate(); return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; /** * * @description 获取第几周结束时间 */ public static String getEndDayOfWeek(int year,int num)&#123; cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY); cal.set(Calendar.YEAR, year); cal.set(Calendar.WEEK_OF_YEAR, num); cal.add(Calendar.DAY_OF_WEEK, 6); toFormatDate(); return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; /** * * @description 获取第几月开始时间 */ public static String getStartDayOfMonth(int year,int num)&#123; String month = num &lt; 10 ? &quot;0&quot; + num : String.valueOf(num); return year + &quot;-&quot; + month + &quot;-&quot; + &quot;01&quot;; &#125; /** * * @description 获取第几月结束时间 */ public static String getEndDayOfMonth(int year,int num)&#123; cal.set(Calendar.YEAR, year); cal.set(Calendar.MONTH, num - 1); cal.set(Calendar.DATE, 1); cal.add(Calendar.MONTH, 1); cal.add(Calendar.DAY_OF_YEAR, -1); toFormatDate(); return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; //获取第几季度开始时间 public static String getStartDayOfQuarter(int year,int num)&#123; num = 3 * num - 2; String month = num &lt; 10 ? &quot;0&quot; + num : String.valueOf(num); return year + &quot;-&quot; + month + &quot;-&quot; + &quot;01&quot;; &#125; //获取第几季度结束时间 public static String getEndDayOfQuarter(int year,int num)&#123; cal.set(Calendar.YEAR, year); cal.set(Calendar.MONTH, 3 * num - 1); cal.set(Calendar.DATE, 1); cal.add(Calendar.MONTH, 1); cal.add(Calendar.DAY_OF_YEAR, -1); toFormatDate(); return cal.get(Calendar.YEAR) + &quot;-&quot;+fm+&quot;-&quot;+fd; &#125; //时间间隔 public static int intervalDay(String d1,String d2)&#123; int num = 0; try&#123; long second = toDate(d2).getTime()-toDate(d1).getTime(); num=(int)(Math.abs(second)/(1000 * 60 * 60 * 24)); &#125;catch(ParseException e)&#123; e.printStackTrace(); &#125; return num; &#125; private static void toFormatDate()&#123; int month = (cal.get(Calendar.MONTH) + 1); fm = month&lt;10?&quot;0&quot;+month:String.valueOf(month); int day = cal.get(Calendar.DAY_OF_MONTH); fd = day&lt;10?&quot;0&quot;+day:String.valueOf(day); &#125; private static Date toDate(String date) throws ParseException&#123; SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); return sdf.parse(date); &#125; private static boolean isEmpty(Object obj)&#123; return obj==null||obj.toString().trim().equals(&quot;&quot;); &#125;&#125;]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>utils</tag>
      </tags>
  </entry>
</search>